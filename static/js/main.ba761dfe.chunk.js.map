{"version":3,"sources":["components/Switch/index.module.css","components/Switch/Switch.js","components/Course/Course.js","components/Preloader/Preloader.js","App.js","reportWebVitals.js","index.js","components/Preloader/index.module.css","components/Course/index.module.css"],"names":["module","exports","Switch","theme","switchTheme","icon","width","height","viewBox","fill","className","xmlns","d","onClick","style","switch","Course","course","removeCourse","updateCode","updateGrade","updateLoad","course_row","type","defaultValue","code","onChange","e","id","currentTarget","value","grade","flex","load","Number","Preloader","preloader","loading_bar","text","App","useState","setTheme","courses","setCourses","A","B","C","D","E","F","gradeMap","gpa","setGpa","comment","setComment","updateGpa","totalPointsGotten","map","reduce","a","b","totalPoints","newGpa","toFixed","localStorage","setItem","JSON","stringify","useEffect","getItem","parse","prevCourses","filter","newLoad","courseToBeUpdated","final","push","sort","newGrade","newCode","oldTheme","opacity","newId","length","cx","cy","r","stroke","strokeWidth","strokeLinecap","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba761dfe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"switch\":\"Switch_switch__1dS7E\"};","import React from \"react\";\r\nimport style from \"./index.module.css\";\r\n\r\nconst Switch = ({ theme, switchTheme }) => {\r\n  const icon =\r\n    theme === \"light\" ? (\r\n      <svg\r\n        width=\"27\"\r\n        height=\"27\"\r\n        viewBox=\"0 0 27 27\"\r\n        fill=\"none\"\r\n        className=\"img-fluid\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M11 0C6 0 0 5 0 13C0 21 6 27 14 27C22 27 27 21 27 16C16 23 4 11 11 0Z\"\r\n          fill=\"#454242\"\r\n        />\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        width=\"27\"\r\n        height=\"27\"\r\n        viewBox=\"0 0 27 27\"\r\n        fill=\"none\"\r\n        className=\"img-fluid\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M6.74325 13.5C6.74325 17.2274 9.77535 20.2595 13.5027 20.2595C17.23 20.2595 20.2622 17.2274 20.2622 13.5C20.2622 9.77265 17.23 6.74055 13.5027 6.74055C9.77535 6.74055 6.74325 9.77265 6.74325 13.5ZM12.15 22.95H14.85V27H12.15V22.95ZM12.15 0H14.85V4.05H12.15V0ZM0 12.15H4.05V14.85H0V12.15ZM22.95 12.15H27V14.85H22.95V12.15ZM4.90995 24.0003L3.00105 22.0914L5.8644 19.2281L7.7733 21.1369L4.90995 24.0003ZM19.2267 5.8644L22.0914 2.9997L24.0003 4.9086L21.1356 7.7733L19.2267 5.8644ZM5.8644 7.77465L3.00105 4.90995L4.9113 3.00105L7.7733 5.86575L5.8644 7.77465ZM24.0003 22.0914L22.0914 24.0003L19.2267 21.1356L21.1356 19.2267L24.0003 22.0914Z\"\r\n          fill=\"white\"\r\n        />\r\n      </svg>\r\n    );\r\n\r\n  return (\r\n    <button onClick={switchTheme} className={style.switch}>\r\n      {icon}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Switch;\r\n","import React from \"react\";\r\nimport style from \"./index.module.css\";\r\n\r\nconst Course = ({\r\n  course,\r\n  removeCourse,\r\n  updateCode,\r\n  updateGrade,\r\n  updateLoad,\r\n}) => {\r\n  return (\r\n    <tr className={style.course_row}>\r\n      <td>\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"text\"\r\n          defaultValue={course.code}\r\n          onChange={(e) => {\r\n            updateCode(course.id, e.currentTarget.value);\r\n          }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <select\r\n          className=\"form-control\"\r\n          defaultValue={course.grade}\r\n          onChange={(e) => {\r\n            updateGrade(course.id, e.currentTarget.value);\r\n          }}\r\n        >\r\n          <option value=\"A\">A</option>\r\n          <option value=\"B\">B</option>\r\n          <option value=\"C\">C</option>\r\n          <option value=\"D\">D</option>\r\n          <option value=\"E\">E</option>\r\n          <option value=\"F\">F</option>\r\n        </select>\r\n      </td>\r\n      <td\r\n        className={`d-flex align-items-center justify-content-between ${style.flex}`}\r\n      >\r\n        <input\r\n          className=\"form-control\"\r\n          type=\"number\"\r\n          defaultValue={course.load}\r\n          onChange={(e) => {\r\n            updateLoad(course.id, Number(e.currentTarget.value));\r\n          }}\r\n        />\r\n        <svg\r\n          width=\"15\"\r\n          height=\"15\"\r\n          viewBox=\"0 0 15 15\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          onClick={() => {\r\n            removeCourse(course.id);\r\n          }}\r\n        >\r\n          <path\r\n            d=\"M12.885 0L7.5 5.385L2.115 0L0 2.115L5.385 7.5L0 12.885L2.115 15L7.5 9.615L12.885 15L15 12.885L9.615 7.5L15 2.115L12.885 0Z\"\r\n            fill=\"#D51313\"\r\n          />\r\n        </svg>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default Course;\r\n","import React from \"react\";\r\nimport style from \"./index.module.css\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div className={style.preloader}>\r\n      <svg\r\n        width=\"209\"\r\n        height=\"208\"\r\n        viewBox=\"0 0 209 208\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"img-fluid\"\r\n      >\r\n        <path\r\n          d=\"M198.238 47.2342L193.042 65.746C138.148 71.7653 104.363 108.661 104.363 108.661C104.363 108.661 68.4224 69.4251 10.487 65.2803V47.2342L1.16699 69.8442V181.02C1.16699 181.02 63.5877 170.658 104.363 205.889C145.138 170.658 207.558 181.02 207.558 181.02V69.8442L198.238 47.2342Z\"\r\n          fill=\"#00D2A7\"\r\n        />\r\n        <path\r\n          d=\"M104.363 207.053C104.084 207.05 103.815 206.946 103.606 206.762C63.646 172.288 1.98255 182.068 1.35344 182.173C1.18613 182.199 1.01502 182.189 0.852041 182.143C0.689063 182.096 0.538136 182.015 0.409789 181.905C0.281912 181.795 0.179248 181.66 0.108859 181.507C0.0384707 181.354 0.00202949 181.188 0.00204056 181.02V69.8442C0.00018487 69.6929 0.0278849 69.5426 0.0835902 69.4018L9.40359 46.7918C9.50639 46.5423 9.69271 46.3362 9.93071 46.2088C10.1687 46.0814 10.4436 46.0405 10.7084 46.0932C10.9776 46.1453 11.2199 46.2905 11.3925 46.5035C11.5651 46.7165 11.657 46.9835 11.652 47.2575V64.2208C63.8906 68.354 98.5378 101.198 104.363 107.019C109.978 101.349 142.656 70.4031 192.134 64.6982L197.12 46.9431C197.186 46.7084 197.323 46.5002 197.513 46.3477C197.703 46.1952 197.937 46.1062 198.18 46.0932C198.426 46.075 198.671 46.1351 198.88 46.2648C199.089 46.3945 199.252 46.5871 199.345 46.8151L208.665 69.4251C208.725 69.5651 208.757 69.7154 208.758 69.8675V181.043C208.758 181.211 208.722 181.378 208.652 181.53C208.581 181.683 208.479 181.819 208.351 181.928C208.222 182.039 208.071 182.12 207.908 182.166C207.745 182.212 207.574 182.222 207.407 182.196C206.778 182.091 145.091 172.334 105.155 206.785C104.933 206.969 104.651 207.065 104.363 207.053ZM22.2186 178.493C44.074 178.493 78.4881 182.522 104.363 204.352C141.783 172.789 197.062 178.459 206.393 179.681V70.0771L198.448 50.7969L194.161 66.0604C194.098 66.2825 193.97 66.4808 193.793 66.6301C193.617 66.7793 193.4 66.8728 193.171 66.8986C139.383 72.8015 105.563 109.092 105.225 109.453C105.116 109.573 104.983 109.669 104.834 109.734C104.686 109.8 104.525 109.834 104.363 109.834C104.2 109.834 104.04 109.8 103.891 109.734C103.743 109.669 103.61 109.573 103.501 109.453C103.151 109.068 67.1876 70.5079 10.4055 66.4446C10.1109 66.4239 9.83509 66.2922 9.63395 66.0761C9.43281 65.8599 9.32132 65.5755 9.32204 65.2803V53.1137L2.33204 70.0771V179.681C8.92875 178.862 15.5712 178.465 22.2186 178.493V178.493Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M104.363 193.978V90.8243C104.363 90.8243 67.933 44.0441 10.4868 47.2342V167.386C10.4868 167.386 67.2223 156.291 104.363 193.978Z\"\r\n          fill=\"white\"\r\n        />\r\n        <path\r\n          d=\"M104.363 195.142C104.209 195.142 104.056 195.111 103.914 195.051C103.772 194.991 103.643 194.903 103.535 194.793C67.2807 158.002 11.2675 168.411 10.7083 168.527C10.5379 168.56 10.3623 168.555 10.1943 168.511C10.0263 168.468 9.87016 168.387 9.73728 168.276C9.60441 168.164 9.49817 168.024 9.42631 167.866C9.35446 167.708 9.3188 167.536 9.32197 167.363V47.2342C9.32144 46.9372 9.43453 46.6511 9.63812 46.4347C9.8417 46.2183 10.1204 46.0878 10.4171 46.07C67.8283 42.8449 104.91 89.6367 105.283 90.1024C105.443 90.3088 105.529 90.5631 105.528 90.8243V193.978C105.528 194.287 105.405 194.583 105.186 194.801C104.968 195.02 104.672 195.142 104.363 195.142ZM29.6396 164.767C49.1999 164.767 79.7346 168.923 103.198 191.196V91.2318C99.9357 87.25 64.7527 45.9535 11.652 48.3403V166.013C17.6089 165.155 23.6212 164.738 29.6396 164.767V164.767Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M104.363 193.978V90.8243C104.363 90.8243 140.792 44.0441 198.238 47.2342V167.386C198.238 167.386 141.503 156.291 104.363 193.978Z\"\r\n          fill=\"white\"\r\n        />\r\n        <path\r\n          d=\"M104.363 195.142C104.054 195.142 103.757 195.02 103.539 194.801C103.321 194.583 103.198 194.287 103.198 193.978V90.8243C103.196 90.5631 103.282 90.3088 103.442 90.1024C103.815 89.6367 140.874 42.8566 198.308 46.07C198.605 46.0878 198.884 46.2183 199.087 46.4347C199.291 46.6511 199.404 46.9372 199.403 47.2342V167.386C199.404 167.557 199.366 167.726 199.294 167.881C199.221 168.036 199.116 168.173 198.984 168.283C198.851 168.393 198.695 168.471 198.528 168.514C198.361 168.556 198.186 168.561 198.017 168.527C197.458 168.411 141.445 158.049 105.19 194.793C105.082 194.903 104.953 194.991 104.811 195.051C104.669 195.111 104.517 195.142 104.363 195.142ZM105.528 91.2318V191.196C139.394 158.98 188.243 164.662 197.073 166.013V48.3403C143.973 45.9652 108.79 87.2267 105.528 91.2318Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M91.5477 100.034C91.2534 100.033 90.9703 99.9203 90.7555 99.7193C59.3005 70.3216 27.4144 72.359 27.0999 72.3823C26.9469 72.3938 26.7932 72.375 26.6474 72.3271C26.5017 72.2792 26.3668 72.2031 26.2505 72.1031C26.0157 71.9011 25.8707 71.6142 25.8475 71.3054C25.8243 70.9966 25.9249 70.6913 26.127 70.4565C26.3291 70.2218 26.6162 70.077 26.9251 70.0538C27.2513 70.0538 60.0694 67.8766 92.3515 97.9962C92.5764 98.2065 92.7088 98.4973 92.7197 98.8049C92.7307 99.1126 92.6192 99.412 92.4098 99.6378C92.3019 99.7605 92.1694 99.8592 92.0209 99.9274C91.8723 99.9956 91.7111 100.032 91.5477 100.034V100.034Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M91.5477 120.571C91.2534 120.57 90.9703 120.458 90.7555 120.257C59.3005 90.8592 27.4144 92.8967 27.0999 92.92C26.9469 92.9314 26.7932 92.9127 26.6474 92.8647C26.5017 92.8168 26.3668 92.7407 26.2505 92.6407C26.0157 92.4387 25.8707 92.1518 25.8475 91.843C25.8243 91.5342 25.9249 91.2289 26.127 90.9942C26.3291 90.7595 26.6162 90.6146 26.9251 90.5914C27.2513 90.5914 60.081 88.4142 92.3515 118.534C92.5764 118.744 92.7088 119.035 92.7197 119.343C92.7307 119.65 92.6192 119.95 92.4098 120.175C92.3019 120.298 92.1694 120.397 92.0209 120.465C91.8723 120.533 91.7111 120.569 91.5477 120.571V120.571Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M91.5477 141.109C91.2534 141.108 90.9703 140.996 90.7555 140.795C59.3005 111.408 27.4144 113.434 27.0999 113.458C26.9469 113.469 26.7932 113.45 26.6474 113.402C26.5017 113.354 26.3668 113.278 26.2505 113.178C26.0157 112.976 25.8707 112.689 25.8475 112.381C25.8243 112.072 25.9249 111.767 26.127 111.532C26.3291 111.297 26.6162 111.152 26.9251 111.129C27.2513 111.129 60.081 108.952 92.3515 139.071C92.5764 139.282 92.7088 139.573 92.7197 139.88C92.7307 140.188 92.6192 140.487 92.4098 140.713C92.3019 140.836 92.1694 140.934 92.0209 141.003C91.8723 141.071 91.7111 141.107 91.5477 141.109Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M91.5477 161.647C91.2534 161.645 90.9703 161.533 90.7555 161.332C59.3005 131.946 27.4144 133.972 27.0999 133.995C26.9469 134.007 26.7932 133.988 26.6474 133.94C26.5017 133.892 26.3668 133.816 26.2505 133.716C26.0157 133.514 25.8707 133.227 25.8475 132.918C25.8243 132.61 25.9249 132.304 26.127 132.069C26.3291 131.835 26.6162 131.69 26.9251 131.667C27.2513 131.667 60.081 129.49 92.3515 159.609C92.5764 159.819 92.7088 160.11 92.7197 160.418C92.7307 160.725 92.6192 161.025 92.4098 161.251C92.3019 161.373 92.1694 161.472 92.0209 161.54C91.8723 161.608 91.7111 161.645 91.5477 161.647Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M117.178 100.034C117.018 100.033 116.86 99.9998 116.714 99.9357C116.567 99.8716 116.436 99.7781 116.327 99.661C116.11 99.4429 115.988 99.1478 115.988 98.8403C115.988 98.5327 116.11 98.2376 116.327 98.0194C133.173 82.2902 150.031 75.5258 161.203 72.6152C173.354 69.46 181.416 70.0305 181.753 70.0655C182.061 70.0893 182.346 70.2337 182.547 70.4672C182.748 70.7007 182.848 71.0041 182.825 71.3112C182.801 71.6182 182.657 71.9033 182.423 72.104C182.19 72.3047 181.886 72.4048 181.579 72.3823C181.264 72.3823 149.413 70.3216 117.923 99.7193C117.72 99.9097 117.456 100.021 117.178 100.034Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M117.178 120.571C117.018 120.571 116.86 120.537 116.714 120.473C116.567 120.409 116.436 120.316 116.327 120.199C116.11 119.981 115.988 119.685 115.988 119.378C115.988 119.07 116.11 118.775 116.327 118.557C133.173 102.828 150.031 96.0635 161.203 93.1644C173.354 89.9976 181.416 90.5798 181.753 90.6031C182.061 90.6269 182.346 90.7713 182.547 91.0048C182.748 91.2382 182.848 91.5417 182.825 91.8488C182.801 92.1558 182.657 92.4409 182.423 92.6416C182.19 92.8423 181.886 92.9424 181.579 92.9199C181.264 92.9199 149.413 90.8592 117.923 120.257C117.72 120.447 117.456 120.559 117.178 120.571Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M117.178 141.109C117.018 141.108 116.86 141.075 116.714 141.011C116.567 140.947 116.436 140.853 116.327 140.736C116.11 140.518 115.988 140.223 115.988 139.916C115.988 139.608 116.11 139.313 116.327 139.095C133.173 123.365 150.031 116.601 161.203 113.702C173.354 110.535 181.416 111.117 181.753 111.141C182.061 111.164 182.346 111.309 182.547 111.542C182.748 111.776 182.848 112.079 182.825 112.386C182.801 112.693 182.657 112.978 182.423 113.179C182.19 113.38 181.886 113.48 181.579 113.458C181.264 113.458 149.401 111.408 117.923 140.795C117.72 140.985 117.456 141.096 117.178 141.109V141.109Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M117.178 161.646C117.018 161.646 116.86 161.613 116.714 161.549C116.567 161.484 116.436 161.391 116.327 161.274C116.11 161.056 115.988 160.761 115.988 160.453C115.988 160.146 116.11 159.85 116.327 159.632C133.173 143.903 150.031 137.139 161.203 134.24C173.354 131.073 181.416 131.655 181.753 131.678C182.061 131.702 182.346 131.847 182.547 132.08C182.748 132.314 182.848 132.617 182.825 132.924C182.801 133.231 182.657 133.516 182.423 133.717C182.19 133.918 181.886 134.018 181.579 133.995C181.264 133.995 149.401 131.946 117.923 161.332C117.72 161.523 117.456 161.634 117.178 161.646V161.646Z\"\r\n          fill=\"#DFEAEF\"\r\n        />\r\n        <path\r\n          d=\"M207.558 182.184C207.368 182.184 207.18 182.138 207.011 182.049C206.842 181.959 206.698 181.83 206.592 181.672L197.272 168.038C197.183 167.912 197.12 167.77 197.087 167.619C197.054 167.469 197.051 167.313 197.078 167.162C197.106 167.01 197.163 166.865 197.247 166.736C197.33 166.607 197.439 166.495 197.566 166.408C197.694 166.321 197.837 166.26 197.988 166.229C198.139 166.197 198.294 166.196 198.446 166.226C198.597 166.255 198.741 166.314 198.87 166.399C198.998 166.485 199.108 166.595 199.194 166.723L208.514 180.368C208.6 180.495 208.66 180.637 208.69 180.787C208.721 180.937 208.722 181.092 208.692 181.242C208.663 181.393 208.605 181.536 208.52 181.663C208.435 181.791 208.326 181.901 208.199 181.986C208.01 182.114 207.787 182.182 207.558 182.184Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M1.16702 182.184C0.934667 182.185 0.707472 182.116 0.514621 181.986C0.387487 181.901 0.278474 181.791 0.193835 181.663C0.109196 181.536 0.0505951 181.393 0.0213762 181.242C-0.00784282 181.092 -0.00710099 180.937 0.0235627 180.787C0.0542263 180.637 0.114202 180.495 0.200066 180.368L9.52007 166.723C9.60563 166.595 9.71581 166.485 9.84421 166.399C9.97261 166.314 10.1167 166.255 10.2681 166.226C10.4194 166.196 10.5751 166.197 10.7261 166.229C10.8771 166.26 11.0203 166.321 11.1475 166.408C11.2748 166.495 11.3834 166.607 11.4672 166.736C11.551 166.865 11.6083 167.01 11.6357 167.162C11.6631 167.313 11.6601 167.469 11.627 167.619C11.5938 167.77 11.531 167.912 11.4423 168.038L2.12232 181.672C2.01656 181.828 1.87435 181.957 1.70793 182.046C1.54151 182.135 1.35588 182.183 1.16702 182.184V182.184Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M105.097 144.625C112.374 144.625 118.273 140.491 118.273 135.392C118.273 130.293 112.374 126.16 105.097 126.16C97.8196 126.16 91.9204 130.293 91.9204 135.392C91.9204 140.491 97.8196 144.625 105.097 144.625Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M105.097 145.801C97.1979 145.801 90.7671 141.144 90.7671 135.404C90.7671 129.664 97.1979 124.995 105.097 124.995C112.995 124.995 119.438 129.653 119.438 135.404C119.438 141.155 113.007 145.801 105.097 145.801ZM105.097 127.324C98.4794 127.324 93.0971 130.945 93.0971 135.404C93.0971 139.863 98.4794 143.472 105.097 143.472C111.714 143.472 117.108 139.851 117.108 135.404C117.108 130.956 111.725 127.324 105.097 127.324Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M143.88 60.0644C143.88 53.7562 142.346 47.5424 139.41 41.9581C136.474 36.3739 132.224 31.5864 127.026 28.0081C121.827 24.4298 115.837 22.1678 109.569 21.4169C103.302 20.6661 96.9461 21.4489 91.0487 23.6979C85.1513 25.9469 79.8893 29.5947 75.7157 34.3272C71.5422 39.0598 68.5822 44.7352 67.0907 50.8647C65.5992 56.9943 65.6208 63.3943 67.1537 69.5137C68.6866 75.633 71.6849 81.2883 75.8903 85.9926C82.2982 93.0119 86.2588 101.917 87.1791 111.374H122.665C123.392 102.148 127.171 93.4276 133.406 86.5864C140.147 79.3993 143.892 69.9147 143.88 60.0644V60.0644Z\"\r\n          fill=\"white\"\r\n        />\r\n        <path\r\n          d=\"M122.676 112.573H87.1906C86.8989 112.574 86.6175 112.466 86.4018 112.27C86.1861 112.073 86.0518 111.804 86.0256 111.513C85.1498 102.291 81.2889 93.6046 75.028 86.7726C69.8455 80.9774 66.4605 73.8013 65.2853 66.1182C64.1101 58.4351 65.1953 50.5762 68.4087 43.4982C71.6222 36.4203 76.8253 30.4287 83.3847 26.2527C89.944 22.0767 97.5768 19.8965 105.354 19.9775C113.131 20.0584 120.716 22.3971 127.187 26.7088C133.658 31.0205 138.735 37.1192 141.8 44.2626C144.865 51.4059 145.786 59.2856 144.451 66.9427C143.116 74.5997 139.582 81.7036 134.28 87.3897C128.208 94.0347 124.519 102.509 123.795 111.478C123.778 111.767 123.654 112.039 123.447 112.241C123.24 112.444 122.966 112.562 122.676 112.573V112.573ZM88.2391 110.244H121.628C122.566 101.136 126.4 92.5669 132.567 85.7947C137.563 80.4393 140.892 73.748 142.151 66.5356C143.409 59.3231 142.542 51.9005 139.656 45.1715C136.769 38.4426 131.987 32.6975 125.892 28.6357C119.797 24.5739 112.651 22.3707 105.326 22.2943C98.0003 22.2179 90.8105 24.2716 84.6318 28.2053C78.4532 32.139 73.5522 37.7831 70.5256 44.4504C67.4989 51.1177 66.4772 58.5205 67.5848 65.7577C68.6924 72.9949 71.8815 79.7541 76.7638 85.2125C83.1107 92.1541 87.1235 100.907 88.2391 110.244V110.244Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M101.24 112.573C100.931 112.573 100.635 112.45 100.417 112.232C100.198 112.013 100.075 111.717 100.075 111.409C100.075 111.164 100.075 93.1994 97.7454 80.7767C93.8029 79.997 90.0535 78.4459 86.7129 76.2128C83.2179 73.8028 81.284 70.9852 81.3539 68.5053C81.4471 65.6645 82.8218 63.5805 85.0586 62.9285C88.5536 61.9156 93.0039 64.5352 96.4639 69.5998C98.0839 72.4397 99.1809 75.547 99.7026 78.7742C103.26 79.3297 106.885 79.2982 110.432 78.681C112.821 69.5066 116.199 62.5327 119.519 61.869C121.266 61.6011 123.051 61.9699 124.548 62.9083C126.046 63.8467 127.155 65.2919 127.674 66.9802C128.175 68.68 129.014 74.513 118.517 78.7742C116.547 79.5761 114.513 80.2109 112.436 80.6719C110.246 89.6484 108.848 100.814 109.698 110.221C109.726 110.53 109.63 110.837 109.431 111.075C109.232 111.313 108.947 111.462 108.638 111.49C108.329 111.518 108.022 111.422 107.784 111.223C107.546 111.024 107.396 110.739 107.368 110.431C106.736 100.592 107.58 90.7145 109.873 81.126C106.672 81.5869 103.422 81.6065 100.215 81.1842C102.405 93.7117 102.44 110.431 102.44 111.455C102.428 111.762 102.295 112.051 102.071 112.261C101.846 112.47 101.547 112.582 101.24 112.573ZM86.6197 65.0358C86.3161 65.035 86.0139 65.0782 85.7226 65.1639C84.0334 65.6529 83.7305 67.4924 83.6955 68.5752C83.6955 70.2052 85.3149 72.4056 88.0526 74.3034C90.8466 76.1823 93.9623 77.5319 97.2445 78.2852C96.7866 75.6899 95.8757 73.1954 94.5533 70.9154C91.7224 66.7589 88.6934 65.0358 86.6197 65.0358V65.0358ZM120.719 64.0811C120.477 64.0807 120.235 64.1041 119.997 64.151C117.9 64.5701 115.197 70.2517 113.007 78.1222C114.557 77.7219 116.078 77.2202 117.562 76.6203C123.387 74.2917 126.323 70.8921 125.356 67.6554C125.034 66.6532 124.412 65.7736 123.575 65.1346C122.738 64.4957 121.725 64.1281 120.673 64.0811H120.719Z\"\r\n          fill=\"#70CC40\"\r\n        />\r\n        <path\r\n          d=\"M122.409 110.326H87.7848C86.1956 110.326 84.9072 111.613 84.9072 113.201V134.484C84.9072 136.072 86.1956 137.36 87.7848 137.36H122.409C123.998 137.36 125.286 136.072 125.286 134.484V113.201C125.286 111.613 123.998 110.326 122.409 110.326Z\"\r\n          fill=\"#FFBC0E\"\r\n        />\r\n        <path\r\n          d=\"M122.42 138.524H87.7847C86.7135 138.521 85.6871 138.095 84.9296 137.338C84.1722 136.581 83.7453 135.555 83.7422 134.484V113.201C83.7453 112.131 84.1722 111.105 84.9296 110.348C85.6871 109.591 86.7135 109.165 87.7847 109.161H122.42C123.491 109.165 124.518 109.591 125.275 110.348C126.033 111.105 126.46 112.131 126.463 113.201V134.484C126.46 135.555 126.033 136.581 125.275 137.338C124.518 138.095 123.491 138.521 122.42 138.524V138.524ZM87.7847 111.49C87.3305 111.49 86.895 111.67 86.5738 111.991C86.2526 112.312 86.0722 112.748 86.0722 113.201V134.484C86.0722 134.938 86.2526 135.373 86.5738 135.694C86.895 136.015 87.3305 136.196 87.7847 136.196H122.42C122.874 136.196 123.31 136.015 123.631 135.694C123.952 135.373 124.133 134.938 124.133 134.484V113.201C124.133 112.748 123.952 112.312 123.631 111.991C123.31 111.67 122.874 111.49 122.42 111.49H87.7847Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M124.727 120.14H85.478C85.169 120.14 84.8727 120.018 84.6542 119.799C84.4357 119.581 84.313 119.285 84.313 118.976C84.313 118.667 84.4357 118.371 84.6542 118.153C84.8727 117.935 85.169 117.812 85.478 117.812H124.727C125.036 117.812 125.332 117.935 125.551 118.153C125.769 118.371 125.892 118.667 125.892 118.976C125.892 119.285 125.769 119.581 125.551 119.799C125.332 120.018 125.036 120.14 124.727 120.14Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M124.727 129.874H85.478C85.169 129.874 84.8727 129.751 84.6542 129.533C84.4357 129.314 84.313 129.018 84.313 128.709C84.313 128.401 84.4357 128.105 84.6542 127.886C84.8727 127.668 85.169 127.545 85.478 127.545H124.727C125.036 127.545 125.332 127.668 125.551 127.886C125.769 128.105 125.892 128.401 125.892 128.709C125.892 129.018 125.769 129.314 125.551 129.533C125.332 129.751 125.036 129.874 124.727 129.874Z\"\r\n          fill=\"#093F68\"\r\n        />\r\n        <path\r\n          d=\"M60.6052 45.3132C60.4613 45.3144 60.3187 45.2867 60.1858 45.2317L45.4485 39.4918C45.1596 39.3807 44.9267 39.1594 44.8011 38.8766C44.6755 38.5939 44.6674 38.2728 44.7786 37.9841C44.8899 37.6954 45.1113 37.4627 45.3942 37.3371C45.6772 37.2116 45.9984 37.2035 46.2873 37.3147L61.0246 42.9846C61.2761 43.084 61.4851 43.2676 61.616 43.5041C61.7468 43.7406 61.7913 44.0153 61.7417 44.2809C61.6921 44.5466 61.5516 44.7868 61.3442 44.9602C61.1369 45.1337 60.8756 45.2297 60.6052 45.2317V45.3132Z\"\r\n          fill=\"#6C63FF\"\r\n        />\r\n        <path\r\n          d=\"M76.9737 20.0719C76.8054 20.0719 76.6392 20.0355 76.4863 19.9652C76.3335 19.8948 76.1977 19.7922 76.0883 19.6644L66.512 8.42927C66.393 8.31871 66.2984 8.18449 66.2344 8.03523C66.1704 7.88597 66.1383 7.72497 66.1402 7.56259C66.1422 7.4002 66.1781 7.24001 66.2456 7.09232C66.3132 6.94463 66.411 6.81269 66.5326 6.705C66.6542 6.59731 66.7971 6.51625 66.9519 6.46701C67.1068 6.41777 67.2702 6.40146 67.4318 6.41912C67.5933 6.43677 67.7494 6.488 67.8899 6.56952C68.0305 6.65103 68.1524 6.76103 68.2479 6.89244L77.8242 18.1392C77.9653 18.3086 78.0555 18.5146 78.0842 18.7331C78.1128 18.9517 78.0788 19.1739 77.986 19.3739C77.8933 19.5739 77.7456 19.7435 77.5602 19.863C77.3748 19.9824 77.1593 20.0468 76.9388 20.0486L76.9737 20.0719Z\"\r\n          fill=\"#6C63FF\"\r\n        />\r\n        <path\r\n          d=\"M148.12 45.3132C147.811 45.3688 147.493 45.2994 147.235 45.1204C146.977 44.9413 146.801 44.6673 146.745 44.3585C146.69 44.0497 146.759 43.7315 146.938 43.4739C147.117 43.2162 147.392 43.0402 147.701 42.9847L162.438 37.3147C162.581 37.2604 162.733 37.2348 162.886 37.2393C163.039 37.2439 163.19 37.2785 163.329 37.3412C163.469 37.4039 163.595 37.4935 163.7 37.6048C163.804 37.7161 163.886 37.847 163.941 37.99C164.051 38.2772 164.043 38.5964 163.919 38.8778C163.794 39.1593 163.563 39.38 163.277 39.4919L148.539 45.1968C148.409 45.2638 148.266 45.3035 148.12 45.3132Z\"\r\n          fill=\"#6C63FF\"\r\n        />\r\n        <path\r\n          d=\"M131.752 20.0719C131.531 20.0701 131.316 20.0057 131.13 19.8863C130.945 19.7668 130.797 19.5972 130.705 19.3972C130.612 19.1972 130.578 18.975 130.607 18.7564C130.635 18.5379 130.725 18.3319 130.867 18.1625L140.478 6.89245C140.679 6.65778 140.965 6.51244 141.273 6.48842C141.581 6.46441 141.886 6.56367 142.12 6.76438C142.355 6.96509 142.501 7.2508 142.525 7.55867C142.549 7.86653 142.449 8.17132 142.249 8.406L132.637 19.6994C132.525 19.8208 132.388 19.9169 132.235 19.9811C132.082 20.0453 131.918 20.0763 131.752 20.0719Z\"\r\n          fill=\"#6C63FF\"\r\n        />\r\n        <path\r\n          d=\"M104.363 14.6115C104.054 14.6115 103.757 14.4889 103.539 14.2705C103.32 14.0522 103.198 13.756 103.198 13.4473V1.16426C103.198 0.855483 103.32 0.559346 103.539 0.341004C103.757 0.122662 104.054 0 104.363 0C104.672 0 104.968 0.122662 105.187 0.341004C105.405 0.559346 105.528 0.855483 105.528 1.16426V13.4473C105.528 13.756 105.405 14.0522 105.187 14.2705C104.968 14.4889 104.672 14.6115 104.363 14.6115Z\"\r\n          fill=\"#6C63FF\"\r\n        />\r\n      </svg>\r\n\r\n      <div className={style.loading_bar}></div>\r\n      <div className={`text-center ${style.text}`}>5.0</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Preloader;\r\n","import { useState, useEffect } from \"react\";\nimport Switch from \"./components/Switch/Switch\";\nimport Course from \"./components/Course/Course\";\nimport Preloader from \"./components/Preloader/Preloader\";\n\nfunction App() {\n  const [theme, setTheme] = useState(\"light\");\n  const [courses, setCourses] = useState([]);\n  const [gradeMap, setGradeMap] = useState({\n    A: 5,\n    B: 4,\n    C: 3,\n    D: 2,\n    E: 1,\n    F: 0,\n  });\n  const [gpa, setGpa] = useState(0);\n  const [comment, setComment] = useState(\"\");\n\n  const updateGpa = (courses) => {\n    let totalPointsGotten = courses\n      .map((course) => course.load * gradeMap[course.grade])\n      .reduce((a, b) => a + b, 0);\n    let totalPoints = courses\n      .map((course) => course.load)\n      .reduce((a, b) => a + b, 0);\n    let newGpa = totalPointsGotten / totalPoints;\n    setGpa((totalPointsGotten / totalPoints).toFixed(2));\n\n    if (newGpa >= 4.5 && newGpa <= 5.0) setComment(\"First class oporrr! 😂🙌\");\n    if (newGpa >= 3.5 && newGpa <= 4.49)\n      setComment(\"Second class upperrrr! Cut soap 😩\");\n    if (newGpa >= 0 && newGpa <= 3.49)\n      setComment(\"Omo you gats fix up if you want to graduate o😂😭\");\n\n    localStorage.setItem(\"courses\", JSON.stringify(courses));\n  };\n\n  useEffect(() => {\n    let courses = localStorage.getItem(\"courses\")\n      ? JSON.parse(localStorage.getItem(\"courses\"))\n      : [\n          {\n            code: \"MTH110\",\n            grade: \"A\",\n            load: 3,\n            id: 1,\n          },\n          {\n            code: \"MTH112\",\n            grade: \"A\",\n            load: 3,\n            id: 2,\n          },\n        ];\n\n    setCourses(courses);\n    updateGpa(courses);\n  }, []);\n\n  const switchTheme = () => {\n    setTheme((oldTheme) => (oldTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  const addCourse = () => {\n    setCourses((prevCourses) => {\n      let newId =\n        prevCourses.sort((a, b) => a.id - b.id)[prevCourses.length - 1]?.id + 1;\n      newId = newId ? newId : 1;\n      return [...prevCourses, { code: \"\", grade: \"F\", load: 0, id: newId }];\n    });\n  };\n\n  const removeCourse = (id) => {\n    setCourses((prevCourses) =>\n      prevCourses.filter((course) => course.id !== id)\n    );\n  };\n\n  const updateLoad = (id, newLoad) => {\n    setCourses((prevCourses) => {\n      let courseToBeUpdated = {\n        ...prevCourses.filter((course) => course.id === id)[0],\n      };\n      courseToBeUpdated.load = newLoad;\n      let final = prevCourses.filter((course) => course.id !== id);\n      final.push(courseToBeUpdated);\n      final.sort((a, b) => a.id - b.id);\n      return final;\n    });\n  };\n\n  const updateGrade = (id, newGrade) => {\n    setCourses((prevCourses) => {\n      let courseToBeUpdated = {\n        ...prevCourses.filter((course) => course.id === id)[0],\n      };\n      courseToBeUpdated.grade = newGrade;\n      let final = prevCourses.filter((course) => course.id !== id);\n      final.push(courseToBeUpdated);\n      final.sort((a, b) => a.id - b.id);\n      return final;\n    });\n  };\n\n  const updateCode = (id, newCode) => {\n    setCourses((prevCourses) => {\n      let courseToBeUpdated = {\n        ...prevCourses.filter((course) => course.id === id)[0],\n      };\n      courseToBeUpdated.code = newCode;\n      let final = prevCourses.filter((course) => course.id !== id);\n      final.push(courseToBeUpdated);\n      final.sort((a, b) => a.id - b.id);\n      return final;\n    });\n  };\n\n  return (\n    <div className={`App ${theme}`}>\n      <Preloader />\n      <div className=\"shapes\" aria-hidden>\n        <div className=\"ball\"></div>\n        <div className=\"staircase\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n      <Switch theme={theme} switchTheme={switchTheme} />\n      <header className=\"center\">\n        <h1>\n          <span className=\"icon\">\n            <svg\n              width=\"59\"\n              height=\"39\"\n              viewBox=\"0 0 59 39\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M13.7049 33.3222C13.8194 33.3222 13.9292 33.2767 14.0102 33.1957C14.0911 33.1147 14.1366 33.0048 14.1366 32.8903V18.4375L28.3745 13.2479C28.489 13.2496 28.5994 13.2058 28.6816 13.126C28.7638 13.0462 28.8109 12.937 28.8126 12.8224C28.8143 12.7079 28.7705 12.5974 28.6907 12.5151C28.6109 12.4329 28.5018 12.3858 28.3873 12.3841L14.1494 17.5737C14.0349 17.5711 13.921 17.5917 13.8146 17.6344C13.7082 17.6771 13.6116 17.741 13.5307 17.8221C13.4488 17.9023 13.3839 17.9981 13.3397 18.1038C13.2955 18.2095 13.2729 18.323 13.2732 18.4375V32.8903C13.2732 33.0048 13.3187 33.1147 13.3996 33.1957C13.4806 33.2767 13.5904 33.3222 13.7049 33.3222Z\"\n                fill=\"#3F3D56\"\n              />\n              <path\n                d=\"M29.6759 38.8596C23.3691 38.8181 17.1411 37.4534 11.3943 34.8535C11.0522 34.701 10.7619 34.4522 10.5586 34.1375C10.3553 33.8227 10.2479 33.4556 10.2495 33.0809V17.3512C10.2501 16.8359 10.4549 16.3418 10.8191 15.9774C11.1833 15.6131 11.6771 15.4081 12.1921 15.4075H47.1596C47.6746 15.4081 48.1684 15.6131 48.5326 15.9775C48.8968 16.3418 49.1016 16.8359 49.1022 17.3512V33.0809C49.1038 33.4557 48.9964 33.8227 48.7931 34.1375C48.5899 34.4522 48.2995 34.701 47.9574 34.8535C42.2106 37.4534 35.9827 38.8181 29.6759 38.8596Z\"\n                fill=\"#6C63FF\"\n              />\n              <path\n                d=\"M29.6711 26.1166C29.4119 26.1168 29.1552 26.0651 28.9162 25.9647L1.18748 14.2598C0.829895 14.1089 0.525694 13.8542 0.3141 13.5287C0.102505 13.2032 -0.00678502 12.8217 0.000326237 12.4335C0.0074375 12.0452 0.130631 11.668 0.354005 11.3505C0.577378 11.033 0.890691 10.7896 1.25356 10.6519L28.9827 0.126966C29.4293 -0.0433335 29.9231 -0.0422829 30.369 0.129918L57.7265 10.6549C58.0873 10.7937 58.3985 11.0371 58.6203 11.3538C58.8421 11.6706 58.9644 12.0464 58.9715 12.4331C58.9787 12.8198 58.8704 13.1999 58.6604 13.5246C58.4505 13.8494 58.1485 14.1041 57.793 14.2562L30.4352 25.9609C30.1936 26.0638 29.9337 26.1168 29.6711 26.1166Z\"\n                fill=\"#6C63FF\"\n              />\n              <path\n                d=\"M13.4873 35.9239C14.9178 35.9239 16.0775 34.7636 16.0775 33.3323C16.0775 31.9011 14.9178 30.7408 13.4873 30.7408C12.0568 30.7408 10.8971 31.9011 10.8971 33.3323C10.8971 34.7636 12.0568 35.9239 13.4873 35.9239Z\"\n                fill=\"#3F3D56\"\n              />\n              <path\n                opacity=\"0.2\"\n                d=\"M57.8875 12.5947L30.5296 24.2995C30.3163 24.3907 30.0868 24.438 29.8549 24.4386C29.6229 24.4392 29.3932 24.393 29.1795 24.3027L1.45077 12.5982C1.10254 12.4547 0.812018 12.1992 0.625108 11.8721C0.502839 12.0842 0.427079 12.3199 0.402844 12.5636C0.378609 12.8073 0.406462 13.0533 0.484551 13.2854C0.56264 13.5174 0.689176 13.7302 0.855765 13.9096C1.02235 14.089 1.22517 14.2309 1.45077 14.3259L29.1795 26.0304C29.3932 26.1207 29.6229 26.1669 29.8549 26.1663C30.0868 26.1657 30.3163 26.1184 30.5296 26.0272L57.8875 14.3224C58.112 14.2266 58.3136 14.0843 58.479 13.9048C58.6445 13.7254 58.77 13.5128 58.8472 13.2813C58.9245 13.0497 58.9519 12.8043 58.9274 12.5614C58.903 12.3185 58.8273 12.0835 58.7054 11.872C58.5199 12.1965 58.2323 12.4506 57.8875 12.5947Z\"\n                fill=\"black\"\n              />\n            </svg>\n          </span>\n          <span className=\"primary-text\">G.P.A.</span> CALCULATOR\n        </h1>\n      </header>\n      <main>\n        <div className=\"talk-container center\">\n          <p className=\"talk my-4\">\n            Calculate your university G.P.A. at the end of each semester and see\n            how well(or terribly) you’re doing. It works on a 5.0 scale.\n          </p>\n        </div>\n        <section className=\"bottom\">\n          <div className=\"bottom-background\"></div>\n          <section className=\"bottom-inner\">\n            <div className=\"course-table-container\">\n              <table className=\"course-table table\">\n                <thead>\n                  <tr>\n                    <th>Course code</th>\n                    <th>Grade</th>\n                    <th>Course load</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {courses.map((course) => (\n                    <Course\n                      course={course}\n                      key={course.id}\n                      removeCourse={removeCourse}\n                      updateCode={updateCode}\n                      updateGrade={updateGrade}\n                      updateLoad={updateLoad}\n                    />\n                  ))}\n                </tbody>\n              </table>\n              <div className=\"btn-container d-flex justify-content-end\">\n                <button className=\"add-btn my-3\" onClick={addCourse}>\n                  <svg\n                    width=\"36\"\n                    height=\"36\"\n                    viewBox=\"0 0 36 36\"\n                    fill=\"none\"\n                    className=\"img-fluid\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle cx=\"18\" cy=\"18\" r=\"18\" fill=\"#00D2A7\" />\n                    <path\n                      d=\"M18 18H8.39999M18 27.6V18V27.6ZM18 18V8.39999V18ZM18 18H27.6H18Z\"\n                      stroke=\"white\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </div>\n            <button\n              className=\"my-4 calculate-btn\"\n              onClick={() => {\n                updateGpa(courses);\n              }}\n            >\n              CALCULATE\n            </button>\n            <p>\n              Your G.P.A.: <span className=\"gpa\">{gpa}</span>\n            </p>\n          </section>\n          <section className=\"closing-comment\">{comment}</section>\n        </section>\n      </main>\n      <footer>\n        <p>\n          Designed by{\" \"}\n          <a href=\"https://trust-akpeti.com\" target=\"_blank\" rel=\"noreferrer\">\n            Akpeti Trust\n          </a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__3kBse\",\"disappear\":\"Preloader_disappear__3FLIe\",\"hide\":\"Preloader_hide__2H_oM\",\"loading_bar\":\"Preloader_loading_bar__34VAO\",\"widen\":\"Preloader_widen__3H-Hw\",\"text\":\"Preloader_text__1B0ev\",\"shine\":\"Preloader_shine__1QS24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course_row\":\"Course_course_row__2n1tN\",\"flex\":\"Course_flex__3FkMj\"};"],"sourceRoot":""}